Installation and Execution
==========================

.. _section-install:

Installation
------------

Download and install VABS (with valid license). In the instructions below, ``VABS_DIR`` refers to the path to the VABS executable;

Download and install Gmsh (http://gmsh.info/) following the official instructions. In the instructions below, ``GMSH_DIR`` refers to the path to the Gmsh executable;

Download PreVABS from cdmHUB (https://cdmhub.org/resources/1597/supportingdocs). Unpack the package to any location. In the instructions below, ``PREVABS_DIR`` refers to the path to the PreVABS executable;

Add those paths to executables to the system environment variable ``PATH``;

- On Windows:

  Open Environment Variables editor. Edit user variables for your account or edit system variables if you have the administrator access. Add ``VABS_DIR``, ``GMSH_DIR``, and ``PREVABS_DIR`` to the variable ``PATH``.

- On Linux:

  In the shell, type::
    
    export PATH=$VABS_DIR:$GMSH_DIR:$PREVABS_DIR:$PATH

  To make this effective each time starting the bash, you can add this command to the bash startup file, which may be ``~/.bashrc``, ``~/.bash_profile``, ``~/.profile``, or ``~/bash_login``;


.. _section-start:

Execution
---------

PreVABS is a command line based program which acts as a general-purpose preprocessor and postprocessor based on parametric inputs necessary for designing a cross section;

Download the examples package from cdmHUB (https://cdmhub.org/resources/1597/supportingdocs), and unpack it to any location;

If you have already added the folder where you stored VABS, Gmsh and PreVABS to the system or user environment variable ``PATH``, to execute PreVABS, you can open any command line tool (Command Prompt or PowerShell on Windows, Terminal on Linux), change directory to the root of the PreVABS package, and type the following command: 

- On Windows::

    PreVABS -i examples\ex_airfoil\mh104.xml -h -v
  
- On Linux::

    PreVABS -i examples\ex_airfoil/mh104.xml -h -v

The first option ``-i`` indicates the path and name for the cross section file (``ex_airfoil\mh104.xml`` for this case). The second option ``-h`` indicates the analysis to compute cross-sectional properties (this analysis is also called homogenization), where meshed cross section will be built and VABS input file will be generated. The last option ``-v`` is for visualizing the meshed cross section.

PreVABS will read the parametric input files and generate the meshed cross section;

Once finished, PreVABS will invoke Gmsh, a tool for visualization, to show the cross section with the corresponding meshes, as shown in :numref:`Fig. %s <fig_quickstart>`. Three files are generated in the same location at this moment, a VABS input file ``mh104_vabs.dat``, a Gmsh geometry file ``mh104.geo``, and a Gmsh mesh file ``mh104.msh``. The geometry file is used to inspect errors when meshing cannot be accomplished. The latter two files are generated only when visualization is needed;

Then user can run VABS using the generated input file.

.. note:: PreVABS and Gmsh are free and open source. The source codes of PreVABS and Gmsh are available on cdmHUB at https://cdmhub.org/resources/1597. You can make changes to both codes by modifying its source codes. However, VABS is a commercial code and you need to request the code and a valid license from AnalySwift (http://analyswift.com/).

.. figure:: figures/rungui0.png
  :name: fig_quickstart
  :width: 6.5in

  Cross section with meshes generated by PreVABS and visualized by Gmsh. Example: ``examples\ex_airfoil\mh104.xml``.



.. _section-command-option:

Command Line Options
--------------------

PreVABS is executed using command ``PreVABS`` with other options. If no option is given, a list of available arguments will be printed on the screen.

- ``-i``: Indicate the location and name of the input file. An input file name should follow this argument.
- ``-h``: Build cross section and generate VABS input file for homogenization.
- ``-d``: Read 1D beam analysis results and update VABS input file for predicting 3D stress/strain distribution over the cross section (this process is also called recovery).
- ``-e``: Execute VABS for homogenization or recovery.
- ``-v``: Visualize meshed cross section or 3D stress/strain/displacement distribution over the cross section.

.. note:: When VABS is called by PreVABS (using the option ``-e``), the actual name of the executable used here is ``VABS``.

Some possible use cases are given below.

Case 1: Build cross section from parametric input files
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

::

  PreVABS -i <cross_section.xml> -h -v

In this case, parametric input files are prepared for the first time, and one may want to check the correctness of these files and whether the cross section can be built as designed. One may also want to try different meshing sizes before running the analysis.

Case 2: Carry out homogenization without visualization
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

::

  PreVABS -i <cross_section.xml> -h -e

The command will build the cross section model, generate the input, and run VABS to calculate the cross-sectional properties, without seeing the plot, since visualization needs extra computing time and resources. One can also make  modifications to the design (change the parametric inputs) and do this step repeatedly. If you already have generated the input file *cross_section_vabs.dat*, and want to only run VABS, you can invoke VABS directly using ``VABS`` *cross_section_vabs.dat*. 

Case 3: Predict 3D stress/strain and plot
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

::

  PreVABS -i <cross_section.xml> -d -e -v

After getting the results from a 1D beam analysis, one may want to find the local strains and stresses of a cross section at some location along the beam. This command will let PreVABS read those results, update the VABS input file, carry out recovery analysis, and finally draw contour plots in Gmsh (:numref:`Fig. %s <fig_post>`). An example of the recover analysis can be found in :ref:`this example <example-airfoil-recover>`.

.. note:: Before any recovery run, a homogenization (with option ``-h``) run must be carried out first for a cross section file. In other words, the file *cross_section.dat.opt* must be generated before the recovery run. Besides, results from the 1D beam analysis need to be added into the *cross_section.xml* file. Preparation of this part of data is explained in :ref:`this section <section-recover>`.

.. note:: Plotted data are the nodal strains and stresses in the global coordinate system.

.. figure:: figures/rungui4.png
  :name: fig_post
  :width: 6.5in

  Visualization of strains and stresses in Gmsh.
